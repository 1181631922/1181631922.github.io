[{"title":"自定义折线图（一）","date":"2017-02-05T03:47:54.000Z","path":"2017/02/05/BrokenLineView_01/","text":"1.先看一下要实现的大致效果图 document.write(\"下图为要实现的设计图，点击后为初步实现的效果图。\"); 点击这里 function changeImage(){ element=document.getElementById('brokenLine'); if(element.src.match(\"brokenlineview1\")){ element.src=\"/images/2017-02-05-brokenlineview2.png\"; }else{ element.src=\"/images/2017-02-05-brokenlineview1.jpg\"; } } 2.说一下实现思路 2.1 首先是先画一个坐标系，但是需要给标尺留出距离，我刚开始的时候就忘了留距离，后来又改的 2.2 再有就是画一个折线图，折线图需要描点和标值 2.3 需要画一个矩形范围 3.在写代码之前先来考虑一下需要什么变量 3.1 自定义view的话首先需要确定view的宽高，还有就是他的原点是相对于自己的 3.2 定义画笔，我刚开始的时候没有确定需要定义几个，需要的话我就去定义 3.3 标尺，以及折线上字的位置 注：注意一些变量是可以定义成静态的，为了效率 4.现在开始着手写代码 &nbsp;&nbsp;&nbsp;&nbsp;4.1 先来确定view的宽高位置 if (width == 0) {//宽 width = getWidth(); pWidth = width - indexWidth; } if (height == 0) {//高 height = getHeight() - indexWidth; } &nbsp;&nbsp;&nbsp;&nbsp;4.2 标字，这里就举一个例子 //折点标字 Paint paintX1 = new Paint(Paint.ANTI_ALIAS_FLAG); paintX1.setAntiAlias(true); paintX1.setTextSize(30); Rect rect = new Rect((int) x1 - 50, (int) y1 - 70, (int) x1 + 50, (int) y1 - 20);//折线为圈，需要减去半径 paintX1.setColor(Color.WHITE); canvas.drawRect(rect, paintX1); Paint.FontMetricsInt fontMetricsIntX1 = paintX1.getFontMetricsInt(); int baseLineX1 = (rect.bottom + rect.top - fontMetricsIntX1.bottom - fontMetricsIntX1.top) / 2; paintX1.setTextAlign(Paint.Align.CENTER); paintX1.setColor(Color.BLACK); canvas.drawText(\"26.9\", rect.centerX(), baseLineX1, paintX1); &nbsp;&nbsp;&nbsp;&nbsp;4.3 再来就是画折线，折线的话先确定折点，然后连线就可以了，我这里是暂时定死的五等分 //y轴第一个点 float pointY1y = height / 3; float pointY1x = indexWidth; //y轴第二个点 float pointY2y = height * 2 / 3; float pointY2x = indexWidth; canvas.drawRect(indexWidth, pointY1y, width, pointY2y, shapePaint); //x轴第一个点,y轴第一个 float x1 = pWidth / 6; float y1 = height / 6; //x轴第二个点 float x2 = pWidth / 3; float y2 = height / 3; //x轴第三个点 float x3 = pWidth / 2; float y3 = height / 2; //x轴第四个点 float x4 = 2 * pWidth / 3; float y4 = height / 3; //x轴第五个点 float x5 = 5 * pWidth / 6; float y5 = 5 * height / 6; //以下是折线图 canvas.drawLine(x1, y1, x2, y2, pointPaint); canvas.drawLine(x2, y2, x3, y3, pointPaint); canvas.drawLine(x3, y3, x4, y4, pointPaint); canvas.drawLine(x4, y4, x5, y5, pointPaint); canvas.drawCircle(x1, y1, 12, bigCirclePaint); canvas.drawCircle(x1, y1, 10, circlePaint); canvas.drawCircle(x2, y2, 12, bigCirclePaint); canvas.drawCircle(x2, y2, 10, circlePaint); canvas.drawCircle(x3, y3, 12, bigCirclePaint); canvas.drawCircle(x3, y3, 10, circlePaint); canvas.drawCircle(x4, y4, 12, bigCirclePaint); canvas.drawCircle(x4, y4, 10, circlePaint); canvas.drawCircle(x5, y5, 12, bigCirclePaint); canvas.drawCircle(x5, y5, 10, circlePaint); &nbsp;&nbsp;&nbsp;&nbsp;4.4 给x和y轴标刻度 // y轴坐标 Paint paintY1 = new Paint(Paint.ANTI_ALIAS_FLAG); paintY1.setTextSize(30); paintY1.setAntiAlias(true); Rect rectY1 = new Rect(0, (int) pointY1y - 30, (int) indexWidth, (int) pointY1y + 30);//折线为圈，需要减去半径 paintY1.setColor(Color.WHITE); canvas.drawRect(rectY1, paintY1); Paint.FontMetricsInt fontMetricsIntY1 = paintY1.getFontMetricsInt(); int baseLineY1 = (rectY1.bottom + rectY1.top - fontMetricsIntY1.bottom - fontMetricsIntY1.top) / 2; paintY1.setTextAlign(Paint.Align.CENTER); paintY1.setColor(Color.BLACK); canvas.drawText(\"26.9\", rectY1.centerX(), baseLineY1, paintY1); //x轴坐标 Paint paintY2 = new Paint(Paint.ANTI_ALIAS_FLAG); paintY2.setTextSize(30); paintY2.setAntiAlias(true); Rect rectY2 = new Rect(0, (int) pointY2y - 30, (int) indexWidth, (int) pointY2y + 30);//折线为圈，需要减去半径 paintY2.setColor(Color.WHITE); canvas.drawRect(rectY2, paintY2); Paint.FontMetricsInt fontMetricsIntY2 = paintY2.getFontMetricsInt(); int baseLineY2 = (rectY2.bottom + rectY2.top - fontMetricsIntY2.bottom - fontMetricsIntY2.top) / 2; paintY2.setTextAlign(Paint.Align.CENTER); paintY2.setColor(Color.BLACK); canvas.drawText(\"26.9\", rectY2.centerX(), baseLineY2, paintY2); 5.我把代码托管到github上了，以下是github地址 折线图：https://github.com/1181631922/BrokenLineView","tags":[]},{"title":"使用hexo搭建自己的博客（二）","date":"2017-02-04T09:57:17.000Z","path":"2017/02/04/hexo_02/","text":"1.上文中bolg已经可以跑起来了，剩下的就是配置成自己想要的效果，先来配置hexo，以下是我的配置，我是根据英文名来理解是做什么的 # Site title: 樊亚风的博客 subtitle: To be, or not to be! description: To be, or not to be! author: 樊亚风 language: zh_CN timezone: # URL ## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/' url: http://yoursite.com root: / permalink: :year/:month/:day/:title/ permalink_defaults: # Directory source_dir: source public_dir: public tag_dir: tags archive_dir: archives category_dir: categories code_dir: downloads/code i18n_dir: :lang skip_render: # Writing new_post_name: :title.md # File name of new posts default_layout: post titlecase: false # Transform title into titlecase external_link: true # Open external links in new tab filename_case: 0 render_drafts: false post_asset_folder: false relative_link: false future: true highlight: enable: true line_number: true auto_detect: false tab_replace: # Category & Tag default_category: uncategorized category_map: tag_map: # Date / Time format ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD time_format: HH:mm:ss # Pagination ## Set per_page to 0 to disable pagination per_page: 10 pagination_dir: page # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: yilia # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: https://github.com/1181631922/1181631922.github.io.git branch: master jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 2.再来看一下主题的修改 &nbsp;&nbsp;&nbsp;&nbsp; 2.1 我的主题用的是yilia，主题的话可以从 hexo主题（点击这里）里面找。 3.看一下yilia主题的配置文件以及相应的修改 # Header menu: 主页: / 所有文章: /archives #随笔: /tags/随笔/ # SubNav subnav: github: \"https://github.com/1181631922/\" weibo: \"http://www.weibo.com/3571009497/profile?topnav=1&wvr=6&is_all=1\" #rss: \"#\" zhihu: \"https://www.zhihu.com/people/xiaofan-56/activities\" #qq: \"#\" #weixin: \"#\" #jianshu: \"#\" #douban: \"#\" #mail: \"fanyafeng@live.cn\" #facebook: \"#\" #google: \"#\" #twitter: \"#\" #linkedin: \"#\" rss: /atom.xml # 是否需要修改 root 路径 # 如果您的网站存放在子目录中，例如 http://yoursite.com/blog， # 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。 root: # Content # 文章太长，截断按钮文字 excerpt_link: more # 文章卡片右下角常驻链接，不需要请设置为false show_all_link: '展开全文' # 数学公式 mathjax: false # 是否在新窗口打开链接 open_in_new: false # 打赏 # 请在需要打赏的文章的md文件头部，设置属性reward: true # 打赏基础设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏 reward_type: 2 # 打赏wording reward_wording: '谢谢你请我吃糖果' # 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg alipay: \"http://a1.qpic.cn/psb?/V12cYG6y1Idi7M/5G5.BS4uzgGQEaF5oI99DlGcxmAM5*BcvT4RcGO3t6k!/b/dCABAAAAAAAA&ek=1&kp=1&pt=0&bo=YwJbAgAAAAAFFww!&tm=1485068400&sce=60-3-3&rf=viewer_4\" # 微信二维码图片地址 weixin: \"http://a3.qpic.cn/psb?/V12cYG6y1Idi7M/6qV8TXLDK9EIdL0oy8vyX5IOxFUOTAYUl4Nopvo4mGc!/b/dB8BAAAAAAAA&bo=bQJoAgAAAAAFACY!&rf=viewer_4\" # Miscellaneous baidu_analytics: '' google_analytics: '' favicon: /favicon.png #你的头像url avatar: \"http://a3.qpic.cn/psb?/V12cYG6y1Idi7M/yzran5rc95ZrvYfrc9ewm7bB6vqdfzJf.TJRUnhQayo!/b/dB8BAAAAAAAA&bo=gAJVAwAAAAAFB*A!&rf=viewer_4\" #是否开启分享 share_jia: true #是否开启多说评论，填写你在多说申请的项目名称 duoshuo: duoshuo-key #若使用disqus，请在博客config文件中填写disqus_shortname，并关闭多说评论 duoshuo: false # 样式定制 - 一般不需要修改，除非有很强的定制欲望… style: # 头像上面的背景颜色 header: '#4d4d4d' # 右滑板块背景 slider: 'linear-gradient(200deg,#a0cfe4,#e8c37e)' # slider的设置 slider: # 是否默认展开tags板块 showTags: false # 智能菜单 # 如不需要，将该对应项置为false # 比如 #smart_menu: friends: false smart_menu: innerArchive: '所有文章' friends: '友链' aboutme: '关于我' friends: 我的csdn: http://blog.csdn.net/qq_23195583/ 我的App下载链接: https://github.com/1181631922/Recreation/tree/master/apk 我的App源码: https://github.com/1181631922/Recreation/ #友情链接4: http://localhost:4000/ #友情链接5: http://localhost:4000/ #友情链接6: http://localhost:4000/ aboutme: 樊亚风Android工程师，还会点java后台谢谢大家 4.先需要在本地测试没问题，然后就是部署到github上 这里需要注意的是github创建仓库的时候需要注意：你的github的名字.github.io（我是这样的，貌似你的github的名字.github.com也可以），剩下的就是本地 init，再去合并你在github建的仓库，剩下的再去发布提交的话hexo会帮你完成。","tags":[]},{"title":"使用hexo搭建自己的博客（一）","date":"2017-02-04T06:44:58.000Z","path":"2017/02/04/hexo_01/","text":"1.先了解一下hexo的特性，以及做一些准备工作 hexo 2.我用的是mac，这里就以mac举例子，其实大同小异。 &nbsp;&nbsp;&nbsp;&nbsp; 2.1 首先需要检测以下的环境，Git大家基本上都有，剩下的就是node了 Node.js Git &nbsp;&nbsp;&nbsp;&nbsp; 2.2 node安装，有的话请略过 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2.1首先更新一下安装源 $ brew update &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2.2安装node（翻墙的话可以直接执行第一行就可以） $ brew install node $ npm config set registry https://registry.npm.taobao.org --global $ npm config set disturl https://npm.taobao.org/dist --global 3.到此默认以上的环境全部安装完成。 $ npm install hexo-cli -g $ hexo init fanyafeng $ cd fanyafeng $ npm install $ hexo server &nbsp;&nbsp;&nbsp;&nbsp;这样项目就运行起来了，以下是效果图（非原主题） 4.下面看一下目录结构以及首页(我这里换了一下主题)","tags":[]},{"title":"Hello World","date":"2017-02-04T04:22:58.000Z","path":"2017/02/04/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"新年快乐","date":"2017-01-22T07:53:48.000Z","path":"2017/01/22/HappyNewYear/","text":"祝大家新年快乐，数钱数到手抽筋！！！","tags":[]}]